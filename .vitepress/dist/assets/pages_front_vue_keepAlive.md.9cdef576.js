import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.498a5564.js";const v=JSON.parse('{"title":"Vue项目使用keep-alive实现详情页返回列表页,保存之前的查询条件","description":"","frontmatter":{"title":"Vue项目使用keep-alive实现详情页返回列表页,保存之前的查询条件"},"headers":[],"relativePath":"pages/front/vue/keepAlive.md","filePath":"pages/front/vue/keepAlive.md"}'),p={name:"pages/front/vue/keepAlive.md"},e=l(`<p>Vue项目使用keep-alive实现详情页返回列表页,保存之前的查询条件</p><h2 id="项目需求" tabindex="-1">项目需求 <a class="header-anchor" href="#项目需求" aria-label="Permalink to &quot;项目需求&quot;">​</a></h2><ol><li>从列表页面(list.vue)进入详情页面(detail.vue)后再返回列表页，需要保留之前的查询条件</li><li>从其他页面(home.vue)进入列表页面(list.vue)不需要保留查询条件</li></ol><h2 id="使用keep-alive来缓存页面" tabindex="-1">使用keep-alive来缓存页面 <a class="header-anchor" href="#使用keep-alive来缓存页面" aria-label="Permalink to &quot;使用keep-alive来缓存页面&quot;">​</a></h2><h3 id="配置路由routes-js" tabindex="-1">配置路由routes.js <a class="header-anchor" href="#配置路由routes-js" aria-label="Permalink to &quot;配置路由routes.js&quot;">​</a></h3><p>在路由选项中，配置<code>meta</code>属性，需要缓存的页面设置<code>keepAlive</code>为<code>true</code>即为需要缓存，同时设置<code>isBack</code>属性，用来标识页面是否是从详情页面返回的，默认<code>false</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;/list&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">component</span><span style="color:#E1E4E8;">: Layout,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hidden</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">meta</span><span style="color:#E1E4E8;">: { </span><span style="color:#B392F0;">title</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">icon</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;fa fa-home&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">children</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      path: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      name: </span><span style="color:#9ECBFF;">&#39;List&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      meta: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        title: </span><span style="color:#9ECBFF;">&#39;列表页&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        icon: </span><span style="color:#9ECBFF;">&#39;fa fa-home&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        keepAlive: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        isBack: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">component</span><span style="color:#E1E4E8;">: () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./views/PPAP/PPAPDealTasks.vue&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;/list&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">component</span><span style="color:#24292E;">: Layout,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hidden</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">meta</span><span style="color:#24292E;">: { </span><span style="color:#6F42C1;">title</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">icon</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;fa fa-home&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">children</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      path: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;List&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      meta: {</span></span>
<span class="line"><span style="color:#24292E;">        title: </span><span style="color:#032F62;">&#39;列表页&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        icon: </span><span style="color:#032F62;">&#39;fa fa-home&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        keepAlive: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        isBack: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">component</span><span style="color:#24292E;">: () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">import</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./views/PPAP/PPAPDealTasks.vue&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="父页面index-vue配置keep-alive" tabindex="-1">父页面index.vue配置<code>keep-alive</code> <a class="header-anchor" href="#父页面index-vue配置keep-alive" aria-label="Permalink to &quot;父页面index.vue配置\`keep-alive\`&quot;">​</a></h3><p>通过判断是否需要缓存的页面，需在<code>router-view</code>条件绑定</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">keep-alive</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;router-view ref=&quot;view&quot; v-if=&quot;$route.meta.keepAlive&quot;/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">keep-alive</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">router-view</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;view&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">v-if</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">$route.meta.keepAlive</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">keep-alive</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;router-view ref=&quot;view&quot; v-if=&quot;$route.meta.keepAlive&quot;/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">keep-alive</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;view&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">v-if</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">$route.meta.keepAlive</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><h3 id="列表页面-list-vue-配置" tabindex="-1">列表页面(list.vue)配置 <a class="header-anchor" href="#列表页面-list-vue-配置" aria-label="Permalink to &quot;列表页面(list.vue)配置&quot;">​</a></h3><p>通过<code>beforeRouteEnter(to, from, next)</code>，来判断路由是从哪里跳转进入列表页面，如果是从详情页面(detail.vue)跳转的，将当前路由对象的<code>meta.isBack</code>设置为true，否则设置为false</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">beforeRouteEnter</span><span style="color:#E1E4E8;"> (to, from, next) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from.path </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/list/detail&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 详情页路由</span></span>
<span class="line"><span style="color:#E1E4E8;">    to.meta.isBack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    to.meta.isBack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">beforeRouteEnter</span><span style="color:#24292E;"> (to, from, next) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from.path </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/list/detail&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 详情页路由</span></span>
<span class="line"><span style="color:#24292E;">    to.meta.isBack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    to.meta.isBack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="在detail-vue页面beforerouteleave-to-from-next-方法设置keepalive" tabindex="-1">在detail.vue页面beforeRouteLeave(to, from, next)方法设置keepAlive <a class="header-anchor" href="#在detail-vue页面beforerouteleave-to-from-next-方法设置keepalive" aria-label="Permalink to &quot;在detail.vue页面beforeRouteLeave(to, from, next)方法设置keepAlive&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">beforeRouteLeave</span><span style="color:#E1E4E8;"> (to, from, next) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	to.meta.keepAlive </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 给列表(list.vue)页面设置keepAlive</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">beforeRouteLeave</span><span style="color:#24292E;"> (to, from, next) {</span></span>
<span class="line"><span style="color:#24292E;">	to.meta.keepAlive </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 给列表(list.vue)页面设置keepAlive</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="在activated钩子函数中挂在页面初次进入时的请求数据" tabindex="-1">在activated钩子函数中挂在页面初次进入时的请求数据 <a class="header-anchor" href="#在activated钩子函数中挂在页面初次进入时的请求数据" aria-label="Permalink to &quot;在activated钩子函数中挂在页面初次进入时的请求数据&quot;">​</a></h3><p>为了在其他页面比如首页(home.vue)进入列表页面(list.vue)，刷新页面中的列表数据和查询条件，我们将在<code>activated</code>钩子函数中挂在页面初次进入时的请求数据。当进入详情页面(detail.vue)后返回列表页面(list.vue)，保存缓存之前的查询条件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">onActivated</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$route.meta.isBack) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">// 不是详情页面(detail.vue)进入，更新初始化列表数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 这是详情页返回，可任意写自己需要处理的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$route.meta.isBack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 重置详情页标识isBack</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">onActivated</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$route.meta.isBack) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// 不是详情页面(detail.vue)进入，更新初始化列表数据</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 这是详情页返回，可任意写自己需要处理的方法</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$route.meta.isBack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 重置详情页标识isBack</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,18),o=[e];function t(c,r,E,i,y,d){return a(),n("div",null,o)}const F=s(p,[["render",t]]);export{v as __pageData,F as default};
