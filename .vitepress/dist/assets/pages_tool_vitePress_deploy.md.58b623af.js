import{_ as s,o as a,c as e,Q as o}from"./chunks/framework.498a5564.js";const l="/blog/assets/vitepress-deploy.d8c23a9e.png",b=JSON.parse('{"title":"部署到线上","description":"","frontmatter":{},"headers":[],"relativePath":"pages/tool/vitePress/deploy.md","filePath":"pages/tool/vitePress/deploy.md"}'),p={name:"pages/tool/vitePress/deploy.md"},t=o(`<h1 id="部署到线上" tabindex="-1">部署到线上 <a class="header-anchor" href="#部署到线上" aria-label="Permalink to &quot;部署到线上&quot;">​</a></h1><p><strong>官方文档上已经列举了多个部署方案和教程 <a href="https://vitepress.dev/guide/deploy" target="_blank" rel="noreferrer">vitepress 部署</a></strong></p><p><strong>当前这个站点使用了两种部署方式：</strong></p><ul><li>Gitee Pages服务</li><li>云服务器部署</li></ul><h2 id="部署前准备" tabindex="-1">部署前准备 <a class="header-anchor" href="#部署前准备" aria-label="Permalink to &quot;部署前准备&quot;">​</a></h2><p>执行build指令，将站点进行打包：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-7Ij8t" id="tab-b34LT85" checked="checked"><label for="tab-b34LT85">npm</label><input type="radio" name="group-7Ij8t" id="tab-ZeqexyB"><label for="tab-ZeqexyB">pnpm</label><input type="radio" name="group-7Ij8t" id="tab-aukfBD1"><label for="tab-aukfBD1">yarn</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docs:build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docs:build</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docs:build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docs:build</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docs:build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docs:build</span></span></code></pre></div></div></div><p>打包后在<code>.vitepress</code>目录下生成的<code>dist</code>目录内的文件，就是部署到线上的文件。</p><h2 id="开通使用gitee-pages服务部署" tabindex="-1">开通使用Gitee Pages服务部署 <a class="header-anchor" href="#开通使用gitee-pages服务部署" aria-label="Permalink to &quot;开通使用Gitee Pages服务部署&quot;">​</a></h2><h3 id="前提条件" tabindex="-1">前提条件 <a class="header-anchor" href="#前提条件" aria-label="Permalink to &quot;前提条件&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>在gitee pages服务上部署，由于域名上会多出一个项目名称，如：https://wangcaiyuan_admin.gitee.io/<code>notebooks</code></p><p>所以在打包之前，需要修改一下<code>config</code>文件，添加<code>base: &quot;/notebooks/&quot;</code>，否则访问会出现样式错乱和路由404问题</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineConfig</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  base: </span><span style="color:#9ECBFF;">&quot;/notebooks/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  base: </span><span style="color:#032F62;">&quot;/notebooks/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div><ol><li>在gitee上创建一个仓库，必须是开源的，否则无法开通git pages服务</li><li>将整个vitepress项目推送到仓库 或 只推送打包后的dist目录下的文件也可以，看个人选择，主要是dist内的文件必须推送</li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果是将整个项目推送到仓库的话，在项目根目录的<code>.gitignore</code>内的<code>dist/</code>需要去掉，否则<code>dist/</code>目录会被忽略</p></div><ol start="3"><li>开通gitee pages服务</li></ol><p><img src="`+l+'" alt="An image"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果是将整个项目推送到仓库的话，部署目录填 <code>.vitepress/dist</code>，如果只上传了dist内的文件，填 <code>./</code></p></div><ol start="4"><li>开通后点击启动，启动完成后会生成一个链接，就可以访问了。</li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>部署成功后，以后每次修改内容，都需要执行以下步骤：</p><ol><li>打包</li><li>推送代码到仓库</li><li>点击git pages服务里的更新</li></ol></div><h2 id="云服务器部署" tabindex="-1">云服务器部署 <a class="header-anchor" href="#云服务器部署" aria-label="Permalink to &quot;云服务器部署&quot;">​</a></h2>',19),n=[t];function c(i,r,d,u,h,g){return a(),e("div",null,n)}const v=s(p,[["render",c]]);export{b as __pageData,v as default};
